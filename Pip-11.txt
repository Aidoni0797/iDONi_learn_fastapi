Управление пакетами с помощью pip

Приложение FastAPI представляет собой пакеты, поэтому вы познакомитесь с методами управления
пакетами, такими как установка пакетов, удаление пакетов и обновление пакетов для вашего
приложения.

Установка пакетов из исходного кода может оказаться сложной задачей, поскольку в большинстве
случаев она включает в себя загрузку и распаковк файлов .tar.gz перед установкой вручную.
В сценарии, где необходимо установить сто пакетов, этот метод становится неэффективным.
Тогда как автоматизировать этот процесс?

Pip - это менеджер пакетов Python, подобный Javascript's yarn; он позволяет автоматизировать
процесс установки пакетов Python как глобально, так и локально.

Установка pip

Pip автоматически устанавливается во время установки Python. Вы можете проверить установлен
ли pip, выполнив следующую команду в своем терминале:

$ python3 -m pip list

Предыдущая команда должна вернуть список установленных пакетов. Результат должен быть 
похож на следующий рисунок.

Если команда возвращает ошибку, следуйте инструкциям на странице 
https://pip.pypa.io/n/stable/installation/,чтобы установить pip.

Основные команды

Установив pip, давайте изучим его основные команды. Чтобы установить пакет 
FastAPI с помощью pip, мы запускаем следующую команду:

$ pip install fastapi

В операционной системе Unix, такой как Mac or Linux, в некоторых случаях ключевое слово
sudo добавляется перед установкой глобальных пакетов.

Для удаления пакета используется следующая команда:

$ pip uninstall fastapi

Чтобы собрать текущие пакеты, установленные в проекте, в файл, мы используем следующую команду
freeze:

$ pip freeze > requirements.txt

Оператор > указывает bash сохранить вывод команды в файл requirements.txt. Это означает,
что запуск pip freeze возвращает все установленные в данный момент пакеты.

Чтобы установить пакеты из файла, такого как файл requirements.txt, используется
следующая команда:

$ pip install -r requirements.txt

Предыдущая команда в основном используется при развертываниию

Теперь, когда вы изучили основы pip и ознакомились с некоторыми основными командами, давайте 
изучим основы Docker.