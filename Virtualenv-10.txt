Создание изолированных сред разработки с помощью Virtualenv

Традиционный подход к разработке приложений на Python заключается в изоляции этих приложений
в виртуальной среде. Это сделано для того, чтобы избежать глобальной установки пакетов и
уменьшить количество конфликтов во время разработки приложений.

Виртуальная среда - это изолированная среда, в которой установленные зависимости приложений 
доступны только внутри нее. В результате приложение может получать доступ только к пакетам и
взаимодействовать только внутри этой среды.

Воздание виртуальной среды

По умолчанию в Python3 установлен модуль venv из стандартной библиотеки. Модуль venv отвечает
за создание виртуальной среды. Давайте создадим папку todos и создадим в ней виртуальную 
среду, выполнив средующие команды:
$ msdir todos && cd todos
$ python3 -m venv venv

Модуль venv принимает в качестве аргумента имя папки, в которую следует установить
виртуальную среду. В нашей только что созданной виртуальной среде копия интерпретатора Python
установлена в папке lib а файлы, обеспечивающие взаимодействие внутри виртуальной среды,
хранятся в папке bin.

Активация и деактивация виртуальной среды
Чтобы активировать виртуальную среду, мы запускаем следующую команду:
$ source venv/bin/activate

Предыдущая команда указывает вашей оболочке использовать интерпретатор и пакеты виртуальной 
среды по умолчанию. После активации виртуальной среды префикс папки виртуальной среды
venv добавляется перед приглашением следующим образом:

Чтобы деактивировать виртуальную среду, в командной строке запускается команда dactivate.
При выполнении команды происходит немедленный выход из изолированной среды, а префикс
удаляется следующим образом:

Важная заметка
Вы также можете создать виртуальную среду и управлять зависимостями приложений, используя
Pipenv and Poetry

Теперь, когда мы создали виртуальную среду, мы можем перейти к пониманию того, как работает
управление пакетами с помощью pip.